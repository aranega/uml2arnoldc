[comment encoding = UTF-8 /]
[module arnoldc('http://www.eclipse.org/uml2/4.0.0/UML')]

[template public generate(a : Model)]
[comment @main/]
[file ('main.arnoldc', false, 'UTF-8')]
IT'S SHOWTIME
	[a.ownedElement->select(oclIsTypeOf(Activity)).oclAsType(Activity).genInitCall()/]
YOU HAVE BEEN TERMINATED

[/file]

[a.ownedElement->select(oclIsTypeOf(Activity)).oclAsType(Activity).genActivity()/]

[file ('stateLib.arnoldc', false, 'UTF-8')]
LISTEN TO ME VERY CAREFULLY incState
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE state
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE num
GIVE THESE PEOPLE AIR

     HEY CHRISTMAS TREE newState
     YOU SET US UP state

     HEY CHRISTMAS TREE op
     YOU SET US UP 0
     GET YOUR ASS TO MARS op
     DO IT NOW genOp num

     GET TO THE CHOPPER newState
     HERE IS MY INVITATION newState
     GET UP op
     ENOUGH TALK
     
I'LL BE BACK newState
HASTA LA VISTA, BABY

LISTEN TO ME VERY CAREFULLY getState
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE state
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE num
GIVE THESE PEOPLE AIR
     
     HEY CHRISTMAS TREE res
     YOU SET US UP state

     HEY CHRISTMAS TREE op
     YOU SET US UP 0
     GET YOUR ASS TO MARS op
     DO IT NOW genOp num

     GET TO THE CHOPPER res
     HERE IS MY INVITATION res
     HE HAD TO SPLIT op
     I LET HIM GO 10
     ENOUGH TALK
     
I'LL BE BACK res
HASTA LA VISTA, BABY

LISTEN TO ME VERY CAREFULLY genOp
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE n
GIVE THESE PEOPLE AIR

     HEY CHRISTMAS TREE res
     YOU SET US UP 1

     GET TO THE CHOPPER n
     HERE IS MY INVITATION n
     GET DOWN 1
     ENOUGH TALK
 
     STICK AROUND n
		 GET TO THE CHOPPER n
     	     HERE IS MY INVITATION n
     	     GET DOWN 1
     	 ENOUGH TALK
		 GET TO THE CHOPPER res
	    	 HERE IS MY INVITATION res
	    	 YOU'RE FIRED 10
		 ENOUGH TALK
     CHILL
     
I'LL BE BACK res
HASTA LA VISTA, BABY
[/file]
[/template]

[template public genActivity(a : Activity) { i : Integer = 0; } ]
[file (a.name.concat('.arnoldc'), false, 'UTF-8')]
[let initNode : InitialNode = a.ownedNode->select(oclIsTypeOf(InitialNode))->any(true) ]
LISTEN TO ME VERY CAREFULLY [a.name/]
[for (var : String | initNode.outgoing.splitParams())]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE [var.trim()/]
[/for]
	HEY CHRISTMAS TREE state
	YOU SET US UP 0000000000
	[initNode.outgoing->select(activity <> null).genCall()/]
HASTA LA VISTA, BABY
[/let]

[for (a : ActivityNode | a.ownedNode->select(not oclIsTypeOf(JoinNode)))]
[a.genNodeCode()/]
[/for]
[for (j : JoinNode | a.ownedNode->select(oclIsTypeOf(JoinNode)).oclAsType(JoinNode)) { i : Integer = i + 1; }]
[j.genJoinNodeCode(i)/]
[/for]
[/file]
[/template]

[template public genNodeCode(a : ActivityNode) ? (oclIsKindOf(Action) or oclIsKindOf(ForkNode) or oclIsKindOf(MergeNode))]
[let vars : Sequence(String) =	a.incoming->select(activity <> null)->any(true).splitParams()]
LISTEN TO ME VERY CAREFULLY [a.genName()/]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE state
[for (var : String | vars)]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE [var.trim()/]
[/for]
GIVE THESE PEOPLE AIR [if (a.oclIsKindOf(Action))]['\n\t'/]TALK TO THE HAND "Entering [a.genName()/]"[/if]
[for (var : String | a.outgoing.guard.stringValue().splitVars()->flatten()->reject(e : String | vars->includes(e)))]
	HEY CHRISTMAS TREE [var.trim()/]
	YOU SET US UP 0
[/for]
[for (ae : ActivityEdge | a.outgoing->select(target.activity <> null))]
	GET YOUR ASS TO MARS state
	[ae.genCall()/]
[/for]
	I'LL BE BACK state
HASTA LA VISTA, BABY

[/let]
[/template]

[template public genNodeCode(d : DecisionNode)]
[let vars : Sequence(String) =	d.incoming->select(activity <> null)->any(true).splitParams()]
LISTEN TO ME VERY CAREFULLY [d.genName()/]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE state
[for (var : String | vars)]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE [var.trim()/]
[/for]
GIVE THESE PEOPLE AIR 
	
	HEY CHRISTMAS TREE predVal
	YOU SET US UP 0
	GET YOUR ASS TO MARS predVal
	[d.incoming.genCall('predicateFor', '', false)/]
	BECAUSE I'M GOING TO SAY PLEASE predVal
	[for (ae : ActivityEdge | d.outgoing->select(activity <> null and guard.stringValue().replaceAll(' ','').contains('true->')))]
		GET YOUR ASS TO MARS state
		[ae.genCall()/]
	[/for]
	BULLSHIT
	[for (ae : ActivityEdge | d.outgoing->select(activity <> null and guard.stringValue().replaceAll(' ','').contains('false->')))]
		GET YOUR ASS TO MARS state
		[ae.genCall()/]
	[/for]
	YOU HAVE NO RESPECT FOR LOGIC

	I'LL BE BACK state
HASTA LA VISTA, BABY

LISTEN TO ME VERY CAREFULLY predicateFor[d.genName()/]
[for (var : String | vars)]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE [var.trim()/]
[/for]
GIVE THESE PEOPLE AIR
	I'LL BE BACK @NO PROBLEMO
HASTA LA VISTA, BABY

[/let]
[/template]

[template public genNodeCode(f : FinalNode)]
[let vars : Sequence(String) =	f.incoming->select(activity <> null)->any(true).splitParams()]
LISTEN TO ME VERY CAREFULLY [f.genName()/]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE state
[for (var : String | vars)]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE [var.trim()/]
[/for]
GIVE THESE PEOPLE AIR
	TALK TO THE HAND "END FROM [f.incoming.source.genName()/][if (f.oclIsKindOf(FlowFinalNode))] WITH AN ERROR[/if]"
	I'LL BE BACK state
HASTA LA VISTA, BABY

[/let]
[/template]

[template public genJoinNodeCode(j : JoinNode, id : Integer)]
[let vars : Sequence(String) =	j.incoming->select(activity <> null)->any(true).splitParams()]
LISTEN TO ME VERY CAREFULLY [j.genName()/]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE state
[for (i : Integer | Sequence{0..vars->size()-1})]
I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE p[i/]
[/for]
GIVE THESE PEOPLE AIR

	GET YOUR ASS TO MARS state
	DO IT NOW incState state [id/]

	HEY CHRISTMAS TREE myState
	YOU SET US UP 0
	GET YOUR ASS TO MARS myState
	DO IT NOW getState state [id/]
	GET TO THE CHOPPER myState
	HERE IS MY INVITATION myState
	YOU ARE NOT YOU YOU ARE ME [j.incoming->select(activity <> null).source->size()/]
	ENOUGH TALK
	BECAUSE I'M GOING TO SAY PLEASE myState
	[for (ae : ActivityEdge | j.outgoing)]
		GET YOUR ASS TO MARS state
		[ae.genCall()/]
	[/for]
	YOU HAVE NO RESPECT FOR LOGIC
		
	I'LL BE BACK state
HASTA LA VISTA, BABY

[/let]
[/template]

[template public genCall(ae : ActivityEdge)]
[ae.genCall('','', true)/]
[/template]

[template public genCall(ae : ActivityEdge, prefix : String, postfix : String, asState : Boolean)]
DO IT NOW [prefix/][ae.target.genName()/][postfix/][if (asState)] state[/if] [if (not ae.guard.isBoolVal())][for (var : String | ae.guard.stringValue().splitVars()) separator (' ')][var.trim()/][/for][/if]
[/template]

[template public genInitCall(a : Activity)]
[let i : InitialNode = a.ownedNode->select(oclIsTypeOf(InitialNode))->any(true) ]
DO IT NOW [a.name/][for (var : String | i.outgoing->select(activity <> null).guard->select(not isBoolVal()).stringValue().splitVars())] 0[/for]
[/let]
[/template]


[query public isBoolVal(v : ValueSpecification) : Boolean = (v.stringValue() = 'true' or v.stringValue() = 'false') /]

[query public genName(a : ActivityNode) : String = a.name.concat('From').concat(a.activity.name.toUpperFirst())/]

[query public splitParams(a : ActivityEdge) : Sequence(String) = 
			if not a.guard->select(not isBoolVal())->isEmpty()
			then a.guard->select(not isBoolVal())->any(true).stringValue().replaceAll(' ','').replaceAll('true->','').replaceAll('false->','').tokenize(',')->reject(e : String | e = 'true' or e = 'false')
			else Sequence{} endif /]

[query public splitVars(s : String) : Sequence(String) = s.replaceAll(' ','').replaceAll('true->','').replaceAll('false->','').tokenize(',')->reject(e : String | e = 'true' or e = 'false')/]
